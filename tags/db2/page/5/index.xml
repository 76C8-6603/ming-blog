<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>db2 on Ming Blog</title>
    <link>https://www.mingaccount.com/tags/db2/</link>
    <description>Recent content in db2 on Ming Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 20 Nov 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://www.mingaccount.com/tags/db2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git push 异常：remote: No anonymous write access</title>
      <link>https://www.mingaccount.com/2018/05/git-push-exception-no-anonymous/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/05/git-push-exception-no-anonymous/</guid>
      <description>异常信息 No anonymous write access. Authentication failed for 解决方案 提交的时候设置UserName和email 或者重新设置全局git用户名和邮箱 git config --global user.name &amp;quot;username&amp;quot; git config --global user.email &amp;quot;email&amp;quot;</description>
    </item>
    
    <item>
      <title>Git上传本地项目</title>
      <link>https://www.mingaccount.com/2018/05/git-upload-local-project/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/05/git-upload-local-project/</guid>
      <description>1.在git上创建仓库，记下clone地址 2.把线上仓库拉到本地 git clone https://github.com/*/*.git 3.把要上传的本地项目文件全部放入本地仓库中 4.把所有文件提交到线上 git</description>
    </item>
    
    <item>
      <title>Git常用命令备忘</title>
      <link>https://www.mingaccount.com/2018/05/git-common-command/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/05/git-common-command/</guid>
      <description># git更新当前分支 git pull #拉线上代码 git clone https://***.git.com #查看工作区状态 git status -s #撤回上一次的commit内容 git reset --hard HEAD~ #查看当前分支 git branch #切换到对应分支 git checkout</description>
    </item>
    
    <item>
      <title>Hutool工具包</title>
      <link>https://www.mingaccount.com/2018/05/hutool/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/05/hutool/</guid>
      <description>Hutool封装大量java工具类 maven配置： &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;cn.hutool&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;hutool-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.4.4&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; API文档 官方首页</description>
    </item>
    
    <item>
      <title>Spring @Transactional事务失效</title>
      <link>https://www.mingaccount.com/2018/05/spring-transaction-invalid/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/05/spring-transaction-invalid/</guid>
      <description>问题代码 service方法抛出了异常，但是没有rollback @Transactional public void batchInsert() throws CommonException{} 抛出的自定义异常继承于Exception public class CommonException extends Exception{} 问题原因 @Tra</description>
    </item>
    
    <item>
      <title>quartz cron表达式详解</title>
      <link>https://www.mingaccount.com/2018/05/quartz-cron/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/05/quartz-cron/</guid>
      <description>Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，Cron有如下两种语法格式： （1） Seconds Minutes Hours DayofMonth Month DayofWeek Year</description>
    </item>
    
    <item>
      <title>Windows IP DNS批处理</title>
      <link>https://www.mingaccount.com/2018/03/windows-dns/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/03/windows-dns/</guid>
      <description>指定ip信息，只需要修改set参数 name是控制面板\网络和 Internet\网络连接中对应的连接名称 @echo off set name=&amp;quot;Wi-Fi&amp;quot; set ipaddress=172.16.61.216 set mask=255.255.255.0 set gateway=172.16.61.254 set dns1=172.16.3.38 set dns2=172.16.3.41 netsh interface ip set address</description>
    </item>
    
    <item>
      <title>判断int和Integer类型是否相等时，空指针异常</title>
      <link>https://www.mingaccount.com/2018/03/int-equals-integer/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/03/int-equals-integer/</guid>
      <description>需要注意在判断int和Integer是否相等时，会先将Integer拆箱，如果Integer为null，会报空指针异常。 因此需要提前处理好I</description>
    </item>
    
    <item>
      <title>[转]字符编码笔记：ASCII、Unicode、UTF-8 和 Base64</title>
      <link>https://www.mingaccount.com/2018/03/char-encode/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/03/char-encode/</guid>
      <description>1. ASCII码 我们知道，在计算机内部，所有的信息最终都表示为一个二进制的字符串。每一个二进制位（bit）有0和1两种状态，因此八个二进制位就</description>
    </item>
    
    <item>
      <title>Java合理避免空指针</title>
      <link>https://www.mingaccount.com/2018/03/java-avoid-null-pointer/</link>
      <pubDate>Fri, 09 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/03/java-avoid-null-pointer/</guid>
      <description>关于如何有效避免空指针，并减少空指针的重复申明。 参考stackoverflow的讨论</description>
    </item>
    
    <item>
      <title>Request的Body只能读取一次解决方法</title>
      <link>https://www.mingaccount.com/2018/03/request-body-read-twice/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/03/request-body-read-twice/</guid>
      <description>一、需要一个类继承HttpServletRequestWrapper，该类继承了ServletRequestWrapper并实现了HttpS</description>
    </item>
    
    <item>
      <title>Python方法定义</title>
      <link>https://www.mingaccount.com/2018/01/python-method-define/</link>
      <pubDate>Sun, 21 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/01/python-method-define/</guid>
      <description># 一般声明 def printUser(id,name,sex,age,email,phone,group): printUser(1,&#39;ming&#39;,&#39;male&#39;,18,&#39;&#39;,110,&#39;default&#39;) # 默认值 def printUser(id,name,sex,age,email=&#39;&#39;,phone=110,group=&#39;default&#39;): printUser(1,&#39;ming&#39;,&#39;male&#39;,18) # 位置参数和关键字参数 def printUser(id,name,sex,/,age,email,*,phone,group): # 位置参数就是调用的时候直接赋值 # 关键字参数就是调用的时候通过 key=value 的形式赋值 # 斜杠之前</description>
    </item>
    
    <item>
      <title>Spring boot filter</title>
      <link>https://www.mingaccount.com/2018/01/spring-boot-filter/</link>
      <pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/01/spring-boot-filter/</guid>
      <description>全局filter @Component @Order(1) public class FirstFilter extends Filter { @Override public void doFilter( ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException { ... chain.doFilter(request, response); } } 全局过滤直接实现Filter即可，如需设定顺序，使用@Order注解 URL</description>
    </item>
    
    <item>
      <title>全局获取request</title>
      <link>https://www.mingaccount.com/2018/01/get-request-global/</link>
      <pubDate>Tue, 09 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/01/get-request-global/</guid>
      <description>交于Spring管理的类，通过注解调用 @Component public class Test{ @Autowired private HttpServletRequest httpServletRequest; } 通过静态方法调用 HttpServletRequest httpServletRequest = ((ServletRequestAttributes)RequestContextHolder.getRequestAttributes()).getRequest();</description>
    </item>
    
    <item>
      <title>Java获取当前类名和方法名</title>
      <link>https://www.mingaccount.com/2018/01/java-fetch-current-classname-methodname/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/01/java-fetch-current-classname-methodname/</guid>
      <description>Description Below I present you two different ways to get the current Class: Using Thread Using getClass() The simplest way to get the name of the class where your code is being executed in is using the getClass() method present in every java object. Like here: String clazz = this.getClass().getName(); This works only if executed in an Object, namely an instanciated class. If you try to execute the code above</description>
    </item>
    
    <item>
      <title>观察者模式和java委托</title>
      <link>https://www.mingaccount.com/2018/01/observe-patter-and-java-agent/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/01/observe-patter-and-java-agent/</guid>
      <description>所谓观察者模式，指的某个状态信息的改变，会影响其他一系列的操作，这时就可以将这些操作抽象化，同时创建一个类统一的管理和执行这些操作。把这些抽</description>
    </item>
    
    <item>
      <title>[转]Class.forName()用法详解</title>
      <link>https://www.mingaccount.com/2017/11/class-forname/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2017/11/class-forname/</guid>
      <description>转自:http://blog.csdn.net/kaiwii/article/details/7405761 主要功能 Class.forNam</description>
    </item>
    
    <item>
      <title>List addAll产生异常java.lang.UnsupportedOperationException</title>
      <link>https://www.mingaccount.com/2017/11/list-addall-exception/</link>
      <pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2017/11/list-addall-exception/</guid>
      <description>原因是因为list是由Arrays.asList生成的 根据Arrays源码，asList方法生成的ArrayList，并不是java.uti</description>
    </item>
    
    <item>
      <title>Maven构建项目描述网页</title>
      <link>https://www.mingaccount.com/2017/11/maven-site/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2017/11/maven-site/</guid>
      <description>通过以下命令，即可创建项目描述网页 mvn site 跟网页展示资源相关的目录 +- src/ +- site/ +- apt/ | +- index.apt ! +- markdown/ | +- content.md | +- fml/ | +- general.fml | +- faq.fml | +- xdoc/ | +- other.xml | +- site.xml site.x</description>
    </item>
    
    <item>
      <title>Spring bean为null启动报错</title>
      <link>https://www.mingaccount.com/2017/11/spring-bean-null/</link>
      <pubDate>Wed, 08 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2017/11/spring-bean-null/</guid>
      <description>背景 如果配置bean的时候出现null值，并且被其他bean所引用。那么启动的时候就有可能出现失败的情况。 @Configuration public class BeanConfiguration{ @Bean public Other getOther() { return null } } 因为配置</description>
    </item>
    
  </channel>
</rss>
