<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on Ming Blog</title>
    <link>http://www.mingaccount.com/tags/redis/</link>
    <description>Recent content in redis on Ming Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 05 Sep 2018 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="http://www.mingaccount.com/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java读取文件内容文件头有﻿</title>
      <link>http://www.mingaccount.com/2019/09/java%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/09/java%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9/</guid>
      <description>&amp;ldquo;\ufeff&amp;quot;是UTF-8 BOM编码的文件头，代表该文件按照什么字节顺序排序 调用java的工具类 [UnicodeIn</description>
    </item>
    
    <item>
      <title>SparkSession.read().csv()无法定位本地文件的问题</title>
      <link>http://www.mingaccount.com/2019/09/sparksession.read.csv%E6%97%A0%E6%B3%95%E5%AE%9A%E4%BD%8D%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/09/sparksession.read.csv%E6%97%A0%E6%B3%95%E5%AE%9A%E4%BD%8D%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6/</guid>
      <description>原因是spark有两个文件头 [file://]代表本地 [hdfs://]代表hdfs路径 如果路径没有文件头，spark会将该路径默认添加上&amp;</description>
    </item>
    
    <item>
      <title>Spring @Value注解无法正确赋值问题</title>
      <link>http://www.mingaccount.com/2019/09/springvalue%E6%B3%A8%E8%A7%A3%E6%97%A0%E6%B3%95%E6%AD%A3%E7%A1%AE%E8%B5%8B%E5%80%BC%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 05 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/09/springvalue%E6%B3%A8%E8%A7%A3%E6%97%A0%E6%B3%95%E6%AD%A3%E7%A1%AE%E8%B5%8B%E5%80%BC%E9%97%AE%E9%A2%98/</guid>
      <description>正确的调用方式为： @Component public class IconProperties { @Value(&amp;quot;${icon.url}&amp;quot;) private String url; } public class test{ @Autowired IconProperties icon; public void test(){ String url = icon.url; } } 这里有三个需要注意的点： 1.@Value赋值是否正确 2.IconProp</description>
    </item>
    
    <item>
      <title>JOOQ事务处理</title>
      <link>http://www.mingaccount.com/2019/08/jooq%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/</link>
      <pubDate>Thu, 22 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/08/jooq%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86/</guid>
      <description>基于Spring 的@Transactional注解，JOOQ可以非常简单的实现事务管理，详细参考JOOQ-Spring Transactional Management 这里主要讨论如Sp</description>
    </item>
    
    <item>
      <title>Mysql循环语句，死循环解决办法</title>
      <link>http://www.mingaccount.com/2019/08/mysql%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%E6%AD%BB%E5%BE%AA%E7%8E%AF%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Thu, 15 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/08/mysql%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5%E6%AD%BB%E5%BE%AA%E7%8E%AF%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>delimiter // #定义标识符为双斜杠 drop procedure if exists test; #如果存在test存储过程则删除 create procedure test() #创建无参存储过程,名称为test begin declare i int; #申明变量 set i = 0; #变量赋</description>
    </item>
    
    <item>
      <title>[转]Spring中使用@Autowired注解静态实例对象</title>
      <link>http://www.mingaccount.com/2019/07/spring%E4%B8%AD%E4%BD%BF%E7%94%A8autowired%E6%B3%A8%E8%A7%A3%E9%9D%99%E6%80%81%E5%AE%9E%E4%BE%8B%E5%AF%B9%E8%B1%A1/</link>
      <pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/spring%E4%B8%AD%E4%BD%BF%E7%94%A8autowired%E6%B3%A8%E8%A7%A3%E9%9D%99%E6%80%81%E5%AE%9E%E4%BE%8B%E5%AF%B9%E8%B1%A1/</guid>
      <description>问题 最近项目小组在重新规划工程的业务缓存，其中涉及到部分代码重构，过程中发现有些工具类中的静态方法需要依赖别的对象实例（该实例已配置在xml</description>
    </item>
    
    <item>
      <title>Mysql 日期TIMESTAMP类型插入，与系统时间有差异</title>
      <link>http://www.mingaccount.com/2019/07/mysql%E6%97%A5%E6%9C%9Ftimestamp%E7%B1%BB%E5%9E%8B%E6%8F%92%E5%85%A5%E4%B8%8E%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E6%9C%89%E5%B7%AE%E5%BC%82/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/mysql%E6%97%A5%E6%9C%9Ftimestamp%E7%B1%BB%E5%9E%8B%E6%8F%92%E5%85%A5%E4%B8%8E%E7%B3%BB%E7%BB%9F%E6%97%B6%E9%97%B4%E6%9C%89%E5%B7%AE%E5%BC%82/</guid>
      <description>1.数据库url后追加 &amp;amp;serverTimezone=Asia/Shanghai 2.修改数据库默认时区 show variables like &amp;quot;%time_zone%&amp;quot;;#查询当前时区 set global time_zone = &#39;+8:00&#39;; #修改mysql</description>
    </item>
    
    <item>
      <title>Java加密类Cipher的使用</title>
      <link>http://www.mingaccount.com/2019/07/java%E5%8A%A0%E5%AF%86%E7%B1%BBcipher%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/java%E5%8A%A0%E5%AF%86%E7%B1%BBcipher%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>public class EncryptUtils { private static final String SECRET_KEY_1 = &amp;quot;YIORGA4dBYp6y7u8&amp;quot;; private static final String SECRET_KEY_2 = &amp;quot;C6B8r5y7u7Uh37Sy&amp;quot;; private IvParameterSpec ivParameterSpec; private SecretKeySpec secretKeySpec; private Cipher cipher; public EncryptUtils() throws UnsupportedEncodingException, NoSuchPaddingException, NoSuchAlgorithmException { ivParameterSpec = new IvParameterSpec(SECRET_KEY_1.getBytes(&amp;quot;UTF-8&amp;quot;)); secretKeySpec = new SecretKeySpec(SECRET_KEY_2.getBytes(&amp;quot;UTF-8&amp;quot;), &amp;quot;AES&amp;quot;); cipher = Cipher.getInstance(&amp;quot;AES/CBC/PKCS5PADDING&amp;quot;); } /** * Encrypt the string with this internal algorithm. * * @param toBeEncrypt string object to be encrypt. * @return returns encrypted string.</description>
    </item>
    
    <item>
      <title>Mysql批量更新</title>
      <link>http://www.mingaccount.com/2019/07/mysql%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/mysql%E6%89%B9%E9%87%8F%E6%9B%B4%E6%96%B0/</guid>
      <description>多个where条件，每个条件对应的更新值不同，需要mysql批量更新 UPDATE test_table SET test_target = test_id CASE WHEN &amp;quot;123&amp;quot; THEN &amp;quot;456&amp;quot; WHEN &amp;quot;789&amp;quot; THEN &amp;quot;101&amp;quot; END WHERE test_id in [&#39;123&#39;,&#39;789&#39;] 但是在程序中，直接写常量的情况太</description>
    </item>
    
    <item>
      <title>spring boot configuration annotation processor not found in classpath</title>
      <link>http://www.mingaccount.com/2019/07/springbootconfigurationexception/</link>
      <pubDate>Wed, 17 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/springbootconfigurationexception/</guid>
      <description>配置有@ConfigurationProperties 注解的类，有如下提示 spring boot configuration annotation processor not found in classpath pom追加配置如下依赖即可 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-configuration-processor&amp;lt;/artifactId&amp;gt; &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt; &amp;lt;/dependency&amp;gt;</description>
    </item>
    
    <item>
      <title>Mybatis Generator配置</title>
      <link>http://www.mingaccount.com/2019/07/mybatisgenerator%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/mybatisgenerator%E9%85%8D%E7%BD%AE/</guid>
      <description>配置复杂，比较臃肿，推荐使用idea的插件easyCode pom.xml配置： &amp;lt;!-- mybatis自动生成 start --&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.mybatis.generator&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;mybatis-generator-maven-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.3.2&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;!--配置文件的</description>
    </item>
    
    <item>
      <title>mySql 插入中文异常 Incorrect string value: &#39;***&#39; for column</title>
      <link>http://www.mingaccount.com/2019/07/mysql_%E6%8F%92%E5%85%A5%E4%B8%AD%E6%96%87%E5%BC%82%E5%B8%B8/</link>
      <pubDate>Mon, 15 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/mysql_%E6%8F%92%E5%85%A5%E4%B8%AD%E6%96%87%E5%BC%82%E5%B8%B8/</guid>
      <description>问题是由mysql的编码问题造成，因为建表的时候没有指定utf-8作为字符集 建议重新建表，或者直接调整对应字段的字符集 1.修改mysql编码</description>
    </item>
    
    <item>
      <title>lombok详解</title>
      <link>http://www.mingaccount.com/2019/07/lombok/</link>
      <pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/lombok/</guid>
      <description>val 精简变量修饰，类似Scala，但是默认追加了final修饰符 val list = new ArrayList&amp;lt;String&amp;gt;(); //等同于 final ArrayList&amp;lt;String&amp;gt; list = new ArrayList&amp;lt;String&amp;gt;(); var 精简变量修饰，类似Scala，修饰变量 val list =</description>
    </item>
    
    <item>
      <title>Maven jar包冲突导致NoClassDefFoundError</title>
      <link>http://www.mingaccount.com/2019/07/mavenjar%E5%8C%85%E5%86%B2%E7%AA%81/</link>
      <pubDate>Sat, 06 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/mavenjar%E5%8C%85%E5%86%B2%E7%AA%81/</guid>
      <description>问题背景 项目的两个依赖，包含了同一个路径，然而因为项目原因还不能删除其中任何一个 代码在本地和线上都能正常通过编译 但是一执行到对应代码就会抛出</description>
    </item>
    
    <item>
      <title>FastJson解析结果部分属性为null的问题</title>
      <link>http://www.mingaccount.com/2019/07/json%E8%A7%A3%E6%9E%90%E7%BB%93%E6%9E%9C%E9%83%A8%E5%88%86%E5%B1%9E%E6%80%A7%E4%B8%BAnull%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/json%E8%A7%A3%E6%9E%90%E7%BB%93%E6%9E%9C%E9%83%A8%E5%88%86%E5%B1%9E%E6%80%A7%E4%B8%BAnull%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>在协作开发时，从接口获取到的json实体部分为空，但是在调试时发现原对象没有任何问题，但是经过解析成为json后，部分属性变为： &amp;ldquo</description>
    </item>
    
    <item>
      <title>SparkSql函数文档</title>
      <link>http://www.mingaccount.com/2019/07/sparksqlapi/</link>
      <pubDate>Tue, 02 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/07/sparksqlapi/</guid>
      <description>spark sql也支持函数，但与通常的数据库函数有些区别，附上官方api文档，以作备忘： http://spark.apache.org/docs/latest/api/sql/index.html#acos</description>
    </item>
    
    <item>
      <title>Maven如何正确导入本地包，保证在线上正常运行</title>
      <link>http://www.mingaccount.com/2019/06/maven%E5%A6%82%E6%9E%9C%E6%AD%A3%E7%A1%AE%E5%AF%BC%E5%85%A5%E6%9C%AC%E5%9C%B0%E5%8C%85/</link>
      <pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/06/maven%E5%A6%82%E6%9E%9C%E6%AD%A3%E7%A1%AE%E5%AF%BC%E5%85%A5%E6%9C%AC%E5%9C%B0%E5%8C%85/</guid>
      <description>pom设置 &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-install-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.5.1&amp;lt;/version&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;id&amp;gt;install-jar-lib&amp;lt;/id&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;install-file&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;!--在mvn package的时候将jar包追加到本地仓库，可修改为validate，以线上容器编译</description>
    </item>
    
    <item>
      <title>为服务开启BBR加速</title>
      <link>http://www.mingaccount.com/2019/05/%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%90%AFbbr%E5%8A%A0%E9%80%9F/</link>
      <pubDate>Fri, 31 May 2019 19:03:55 +0800</pubDate>
      
      <guid>http://www.mingaccount.com/2019/05/%E4%B8%BA%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%90%AFbbr%E5%8A%A0%E9%80%9F/</guid>
      <description>脚本： wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh &amp;amp;&amp;amp; chmod +x bbr.sh &amp;amp;&amp;amp; ./bbr.sh 查看结果： sysctl net.ipv4.tcp_available_congestion_control</description>
    </item>
    
    <item>
      <title>Scala基础类结构图</title>
      <link>http://www.mingaccount.com/2019/05/scala%E5%9F%BA%E7%A1%80%E7%B1%BB%E7%BB%93%E6%9E%84%E5%9B%BE/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/05/scala%E5%9F%BA%E7%A1%80%E7%B1%BB%E7%BB%93%E6%9E%84%E5%9B%BE/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Scala运算符优先顺序</title>
      <link>http://www.mingaccount.com/2019/05/scala%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E9%A1%BA%E5%BA%8F/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.mingaccount.com/2019/05/scala%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BC%98%E5%85%88%E9%A1%BA%E5%BA%8F/</guid>
      <description>运算符的优先级由其第一个字符决定 以下列出的字符按优先级从高到低的顺序排列 (all letters) | ^ &amp;amp; &amp;lt; &amp;gt; = ! + - * / % (all other special characters)</description>
    </item>
    
  </channel>
</rss>
