<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>unit-test on Ming Blog</title>
    <link>https://www.mingaccount.com/tags/unit-test/</link>
    <description>Recent content in unit-test on Ming Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 15 Sep 2017 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://www.mingaccount.com/tags/unit-test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[译]Java8：循环与函数式编程</title>
      <link>https://www.mingaccount.com/2018/08/java8-for-functional/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/08/java8-for-functional/</guid>
      <description>Java8函数式编程的加入彻底改变了游戏规则。对Java开发者来说这是一个全新的世界，我们也需要做出相应的改变。 在这篇文章中我们将找寻传统循</description>
    </item>
    
    <item>
      <title>[译]Java8的函数式接口</title>
      <link>https://www.mingaccount.com/2018/08/java8-lamda-interface/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/08/java8-lamda-interface/</guid>
      <description>Java8引入了 java.util.function 包，他包含了函数式接口，具体的描述在以下api说明文档中： 函数式接口为lambda表达式和方法引用提供目标类型。每个函数式</description>
    </item>
    
    <item>
      <title>Spring boot 文件路径读取异常</title>
      <link>https://www.mingaccount.com/2018/08/spring-boot-get-file-path/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/08/spring-boot-get-file-path/</guid>
      <description>在开发代码中，有一段需要获取resources目录下的一个配置文件（这里写作test.xml）。 这段代码在ide中没有任何问题，但是一打成j</description>
    </item>
    
    <item>
      <title>Linux常用命令备忘</title>
      <link>https://www.mingaccount.com/2018/08/linux-common-command/</link>
      <pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/08/linux-common-command/</guid>
      <description>cd - #查看上一次所在的目录 cat /etc/hosts #文档查看 ls #查看当前目录下所有文件 pwd #查看当前目录的绝对路径 ll #查看目录下文件的详细信息，包括权限属组等信息</description>
    </item>
    
    <item>
      <title>vim命令备忘</title>
      <link>https://www.mingaccount.com/2018/08/vim-common-command/</link>
      <pubDate>Tue, 14 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/08/vim-common-command/</guid>
      <description>vi /etc/hosts i 修改模式 esc 退出修改 :q 正常退出(文件没有修改 :q! 不保存退出 :wq 保存退出 G 跳到末尾行 dd 删除当前行 gg 跳到第一行第一个字符 $ 跳到当前行的最后一个字</description>
    </item>
    
    <item>
      <title>SpringBoot定时任务</title>
      <link>https://www.mingaccount.com/2018/08/spring-boot-schedule/</link>
      <pubDate>Sun, 12 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/08/spring-boot-schedule/</guid>
      <description>开启定时任务 @Configuration @EnableScheduling @ComponentScan(basePackages=&amp;quot;com.myco.tasks&amp;quot;) public class AppConfig { } 如果需要对定时任务的生命周期有其他的操作，可以实现接口SchedulingConfigurer @Configuration @EnableScheduling public class AppConfig implements SchedulingConfigurer { @Override</description>
    </item>
    
    <item>
      <title>大浏览量系统的静态化架构设计</title>
      <link>https://www.mingaccount.com/2018/08/static-sturcture-design/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/08/static-sturcture-design/</guid>
      <description>本篇文章着重整理什么是静态化系统架构，以及静态化架构的几种方案。 首先先贴一个淘宝系统升级的历程(09~13)： 09年，系统拆分，静态文件合并</description>
    </item>
    
    <item>
      <title>请求参数中的&#43;号为什么会丢失,如何保证参数完整</title>
      <link>https://www.mingaccount.com/2018/08/request-param-lost-add-symbol/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/08/request-param-lost-add-symbol/</guid>
      <description>最近在开发中碰见一个问题，后端代码调用接口，在请求端参数没有任何问题，但是当接口接收到参数时，其中的加号全部变为了空格。 在查阅资料后发现是U</description>
    </item>
    
    <item>
      <title>Maven package完整依赖jar包</title>
      <link>https://www.mingaccount.com/2018/07/maven-package-complete-dependency/</link>
      <pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/07/maven-package-complete-dependency/</guid>
      <description>maven package生成的jar包默认是没有项目依赖的 需要导出的jar包包含项目所有的依赖，需要配置pom： &amp;lt;build&amp;gt; &amp;lt;finalName&amp;gt;yourApp&amp;lt;/finalName&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-shade-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;shadedArtifactAttached&amp;gt;true&amp;lt;/shadedArtifactAttached&amp;gt; &amp;lt;shadedClassifierName&amp;gt;jar-with-dependencies&amp;lt;/shadedClassifierName&amp;gt; &amp;lt;!-- Any name that makes sense --&amp;gt; &amp;lt;outputDirectory&amp;gt;../output/jar-with-dependencies&amp;lt;/outputDirectory&amp;gt; &amp;lt;/configuration&amp;gt;</description>
    </item>
    
    <item>
      <title>Spring boot @Value设定默认值 配置文件中没有也不会报错</title>
      <link>https://www.mingaccount.com/2018/07/spring-boot-properties-default-value/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/07/spring-boot-properties-default-value/</guid>
      <description>背景 默认情况下@Value注解如果没有在properties文件中存在对应值，那么启动项目的时候会直接报错。 解决方案 可以给@Value注解设</description>
    </item>
    
    <item>
      <title>Windows删除启动盘的所有分区</title>
      <link>https://www.mingaccount.com/2018/07/windows-delete-disk-partition/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/07/windows-delete-disk-partition/</guid>
      <description>win10右键徽标-&amp;gt;Windows Powershell(管理员) dispark list disk 展示所有磁盘 select disk # 确认好所选目标磁盘，#号为id clean 删除选中磁盘</description>
    </item>
    
    <item>
      <title>[译]lambda表达式对 SAM （单个抽象方法类）type的处理方式</title>
      <link>https://www.mingaccount.com/2018/06/lambda-sam/</link>
      <pubDate>Tue, 26 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/06/lambda-sam/</guid>
      <description>在阅读Venkat Subramaniam的著作《Functional Programming in Java》 之后，方法模式和lambda完美结合让我印象深刻。 这种模式</description>
    </item>
    
    <item>
      <title>Npm淘宝镜像</title>
      <link>https://www.mingaccount.com/2018/06/npm-taobao-mirror/</link>
      <pubDate>Tue, 19 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/06/npm-taobao-mirror/</guid>
      <description>npm config set registry https://registry.npm.taobao.org</description>
    </item>
    
    <item>
      <title>Java反射常用API汇总</title>
      <link>https://www.mingaccount.com/2018/06/java-reflection-common-api/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/06/java-reflection-common-api/</guid>
      <description>“JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意方法和属性” 一、类对</description>
    </item>
    
    <item>
      <title>Mysql安装后root无法登陆(Access denied for user &#39;root&#39;@&#39;localhost&#39;)</title>
      <link>https://www.mingaccount.com/2018/06/mysql-cant-login-with-root/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/06/mysql-cant-login-with-root/</guid>
      <description>复杂密码才能通过 sudo mysql -u root -p mysql&amp;gt; select user, plugin from mysql.user; mysql&amp;gt; update mysql.user set authentication_string=PASSWORD(&#39;xcvds_32GDS&#39;), plugin=&#39;mysql_native_password&#39; where user=&#39;root&#39;; mysql8.0不能用上边的语句： ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &amp;quot;svewe_123&amp;quot;;</description>
    </item>
    
    <item>
      <title>Maven怎样把jar部署到远程仓库</title>
      <link>https://www.mingaccount.com/2018/06/maven-deploy-jar-to-remote-repository/</link>
      <pubDate>Thu, 07 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/06/maven-deploy-jar-to-remote-repository/</guid>
      <description>distributionManagement 需要在pom.xml文件中新增标签&amp;lt;distributionManagement&amp;gt; &amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;com.mycompany.app&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;my-app&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt; &amp;lt;name&amp;gt;Maven Quick Start Archetype&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt; &amp;lt;!-- | | | --&amp;gt; &amp;lt;distributionManagement&amp;gt; &amp;lt;repository&amp;gt;</description>
    </item>
    
    <item>
      <title>avg函数忽略null值</title>
      <link>https://www.mingaccount.com/2018/06/avg-ignore-null/</link>
      <pubDate>Tue, 05 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/06/avg-ignore-null/</guid>
      <description>avg函数对值为null的行，会忽略不计 解决方案 avg((coalesce(column,0))</description>
    </item>
    
    <item>
      <title>Srping Boot测试</title>
      <link>https://www.mingaccount.com/2018/05/spring-boot-test/</link>
      <pubDate>Mon, 21 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/05/spring-boot-test/</guid>
      <description>参考官方文档Spring Boot Test</description>
    </item>
    
    <item>
      <title>Maven标准文件夹结构</title>
      <link>https://www.mingaccount.com/2018/05/maven-stadard-dir-layout/</link>
      <pubDate>Sun, 13 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/05/maven-stadard-dir-layout/</guid>
      <description>目录 描述 src/main/java Application/Library sources src/main/resources Application/Library resources src/main/filters Resource filter files src/main/webapp Web application sources src/test/java Test sources src/test/resources Test resources src/test/filters Test resource filter files src/it Integration Tests (primarily for plugins) src/assembly Assembly descriptors src/site Site LICENSE.txt Project&amp;rsquo;s license NOTICE.txt Notices and attributions required by libraries that the project depends on README.txt Project&amp;rsquo;s readme</description>
    </item>
    
    <item>
      <title>[译]java9新特性：在接口中用pirvate方法让default(java8接口特性)更简练</title>
      <link>https://www.mingaccount.com/2018/05/java9-new-feature/</link>
      <pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://www.mingaccount.com/2018/05/java9-new-feature/</guid>
      <description>Java8 带来了许多改变，其中之一就是default修饰的接口方法。 这些方法改变了我们已知的接口，现在我们能够在接口中定义默认实现方法。默认实现方法</description>
    </item>
    
  </channel>
</rss>
